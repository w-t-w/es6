/**
 * V8 引擎的垃圾回收机制
 * 使用分代策略,分为新生代和老生代两种垃圾回收机制
 * 新生代垃圾回收机制: 会将堆空间内存实行分割,分为多个 semispace,semespace 会分为两部分,from 空间和 to 空间,分配对象内存只在 from 空间中进行,to 空间闲置,新生代垃圾回收机制如下
 * 1. 会将 from 空间中存活的对象尽数移入至 to 空间
 * 2. 反转 from 空间和 to 空间
 * 3. 将 to 空间中的所有的对象尽数垃圾回收
 * 晋升老生代
 * 1. 会将 from 空间中经过多次复制之后还依然存活的对象直接晋升至老生代
 * 2. 在反转 from 空间与 to 空间时,如果 to 空间的使用量大于 25%,会将 from 空间中所有的对象尽数晋升老生代
 * 老生代垃圾回收机制:
 * 1. 标记删除: 会将死亡的对象,尽数实行垃圾回收处理
 * 2. 标记合并: 会将存活的对象放在空间的一边,需要回收的对象放在空间的另外一边,对需要实行回收的整个区域尽数实行垃圾回收处理
 */